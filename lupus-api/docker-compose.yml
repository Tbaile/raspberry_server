services:
  redis:
    image: redis:6.2.14-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    restart: unless-stopped
  database:
    image: mariadb:10.6.10
    healthcheck:
      test: [ "CMD", "mysql", "-ulupusapi", "-plupusapi", "-e", "SELECT 1" ]
    restart: unless-stopped
    volumes:
      - database:/var/lib/mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: true
      MYSQL_DATABASE: lupusapi
      MYSQL_USER: lupusapi
      MYSQL_PASSWORD: lupusapi
  setup:
    image: tbaile/lupus-api-app:develop
    depends_on:
      - database
      - redis
    volumes:
      - public:/app/public
      - storage:/var/www/html/storage
    secrets:
      - source: env_file
        target: /var/www/html/.env
    environment:
      ROLE: "setup"
  app:
    image: tbaile/lupus-api-app:develop
    healthcheck:
      test: [ "CMD", "php-fpm-healthcheck" ]
    restart: unless-stopped
    depends_on:
      setup:
        condition: service_completed_successfully
    volumes:
      - public:/app/public
      - storage:/var/www/html/storage
    secrets:
      - source: env_file
        target: /var/www/html/.env
  scheduler:
    image: tbaile/lupus-api-app:develop
    restart: unless-stopped
    depends_on:
      setup:
        condition: service_completed_successfully
    volumes:
      - public:/app/public
      - storage:/var/www/html/storage
    secrets:
      - source: env_file
        target: /var/www/html/.env
    environment:
      ROLE: "scheduler"
  queue:
    image: tbaile/lupus-api-app:develop
    restart: unless-stopped
    depends_on:
      setup:
        condition: service_completed_successfully
    volumes:
      - public:/app/public
      - storage:/var/www/html/storage
    secrets:
      - source: env_file
        target: /var/www/html/.env
    environment:
      ROLE: "queue"
  web:
    image: tbaile/lupus-api-web:develop
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "--output", "/dev/null", "http://localhost" ]
    restart: unless-stopped
    networks:
      - default
      - reverse_proxy
    volumes:
      - public:/var/www/html/public:ro
      - storage:/var/www/html/storage
    labels:
      - "traefik.enable=true"
      # HTTP router
      - "traefik.http.routers.lupus-api.entrypoints=web"
      - "traefik.http.routers.lupus-api.rule=Host(`${APP_DOMAIN:-lupus-api.localhost}`)"
      - "traefik.http.routers.lupus-api.middlewares=force-https@file"
      # HTTPS router
      - "traefik.http.routers.lupus-api-https.entrypoints=websecure"
      - "traefik.http.routers.lupus-api-https.rule=Host(`${APP_DOMAIN:-lupus-api.localhost}`)"
      - "traefik.http.routers.lupus-api-https.tls=true"
      - "traefik.http.routers.lupus-api-https.tls.certresolver=cloudflare"
    environment:
      APP_DOMAIN: ${APP_DOMAIN}
      FPM_URL: app
      FPM_PORT: 9000

volumes:
  database: {}
  public: {}
  storage: {}

networks:
  reverse_proxy:
    external: true

secrets:
  env_file:
    file: .env
